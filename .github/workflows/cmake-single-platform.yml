# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install gtkmm development packages
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtkmm-4.0-dev # For gtkmm4
    
    - name: Install CMake
      uses: lukka/get-cmake@v4.0.2
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Generate Bundles
      working-directory: ${{github.workspace}}/build
      run: |
        make package_source
        cpack -G DEB

    - name: Upload artifact 
      uses: actions/upload-artifact@v4
      with:
        name: Bundles
        path: |
          build/*.tar.gz
          build/*.zip
          build/*.deb

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      # issues: write # to be able to comment on released issues
      # pull-requests: write # to be able to comment on released pull requests
      # id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download artifact  
        uses: actions/download-artifact@v4
        with:
          name: Bundles
          path: build
      - name: Display structure of downloaded files
        run: ls -R build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

